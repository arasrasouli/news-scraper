# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type NewsPattern {
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  createDate: DateTime!
  modifyDate: DateTime!
  columnSelector: String!
  titleSelector: String!
  linkSelector: String!
  newsProvider: NewsProvider!
  newsProviderId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Topic {
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  createDate: DateTime!
  modifyDate: DateTime!
  name: String!
  expireDate: DateTime
  tags: [String!]
  newsArticles: [NewsArticle!]
  isValid: Boolean!
}

type NewsArticle {
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  createDate: DateTime!
  modifyDate: DateTime!
  title: String!
  url: String!
  summary: String
  publishedAt: DateTime
  imageUrl: String
  tags: [String!]
  newsProvider: NewsProvider!
  newsProviderId: String!
  topics: [Topic!]
  isProcessed: Boolean!
}

type NewsProvider {
  id: ID!
  isActive: Boolean!
  isDeleted: Boolean!
  createDate: DateTime!
  modifyDate: DateTime!
  name: String!
  url: String!

  """List of news articles"""
  newsPatterns: [NewsArticle!]
}

type AboutDto {
  title: String!
  description: String!
  version: String!
}

type AuthResponse {
  access_token: String!
}

type Query {
  getNewsProvider(id: String!): NewsProvider!
  getNewsProviders: [NewsProvider!]!
  getNewsPattern(id: String!): NewsPattern!
  getNewsPatterns: [NewsPattern!]!
  getTopic(id: String!): Topic!
  getTopics: [Topic!]!
  getNewsArticle(id: String!): NewsArticle!
  getNewsArticles: [NewsArticle!]!
  about: AboutDto!
}

type Mutation {
  login(loginInput: LoginInput!): AuthResponse!
  createNewsProvider(createNewsProviderDto: CreateNewsProviderDto!): NewsProvider!
  updateNewsProvider(id: String!, updateNewsProviderDto: UpdateNewsProviderDto!): NewsProvider!
  deleteNewsProvider(id: String!): Boolean!
  createNewsPattern(createNewsPatternDto: CreateNewsPatternDto!): NewsPattern!
  updateNewsPattern(id: String!, updateNewsPatternDto: UpdateNewsPatternDto!): NewsPattern!
  deleteNewsPattern(id: String!): Boolean!
  createTopic(createTopicDto: CreateTopicDto!): Topic!
  updateTopic(id: String!, updateTopicDto: UpdateTopicDto!): Topic!
  deleteTopic(id: String!): Boolean!
  createNewsArticle(createNewsArticleDto: CreateNewsArticleDto!): NewsArticle!
  updateNewsArticle(id: String!, updateNewsArticleDto: UpdateNewsArticleDto!): NewsArticle!
  deleteNewsArticle(id: String!): Boolean!
}

input LoginInput {
  username: String!
  password: String!
}

input CreateNewsProviderDto {
  name: String!
  url: String!
}

input UpdateNewsProviderDto {
  id: ID
  isActive: Boolean
  isDeleted: Boolean
  createDate: DateTime
  modifyDate: DateTime
  deletedAt: DateTime
  name: String
  url: String
}

input CreateNewsPatternDto {
  """CSS selector for the news column"""
  columnSelector: String!

  """CSS selector for news item titles"""
  titleSelector: String!

  """CSS selector for news item links"""
  linkSelector: String!

  """UUID of the associated NewsProvider"""
  newsProviderId: String!
}

input UpdateNewsPatternDto {
  """CSS selector for the news column"""
  columnSelector: String

  """CSS selector for news item titles"""
  titleSelector: String

  """CSS selector for news item links"""
  linkSelector: String

  """UUID of the associated NewsProvider"""
  newsProviderId: String
}

input CreateTopicDto {
  name: String!
  tags: [String!]
}

input UpdateTopicDto {
  name: String!
  tags: [String!]
  expireDate: DateTime
}

input CreateNewsArticleDto {
  title: String!
  url: String!
  summary: String
  publishedAt: DateTime
  imageUrl: String
  tags: [String!]
  newsProviderId: String!
}

input UpdateNewsArticleDto {
  title: String
  summary: String
  publishedAt: DateTime
  imageUrl: String
  tags: [String!]
  isProcessed: Boolean
}